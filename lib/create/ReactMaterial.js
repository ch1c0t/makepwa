// Generated by CoffeeScript 2.5.1
(function() {
  var createDeps, createManifest, createPackageFile, createPages, createScripts, createSrc, createStyles, exec, fs;

  fs = require('fs');

  ({exec} = require('child_process'));

  ({createManifest} = require('./common'));

  exports.createProject = function({name, dir}) {
    var spec;
    spec = {
      name: name,
      version: '0.0.0',
      scripts: {
        start: 'makepwa watch',
        build: 'makepwa build'
      },
      devDependencies: {
        makepwa: VERSION,
        coffeescript: "^2.5.1",
        "coffee-loader": "^2.0.0"
      },
      dependencies: {
        "@material-ui/core": "^4.11.2",
        react: "^17.0.1",
        "react-dom": "^17.0.1",
        wrapjsx: "^0.0.3"
      }
    };
    createPackageFile({spec, dir});
    createSrc({name, dir});
    console.log("Running 'npm install'");
    return exec('npm install', {
      cwd: dir
    });
  };

  createPackageFile = function({spec, dir}) {
    var source;
    source = JSON.stringify(spec, null, 2);
    return fs.writeFileSync(`${dir}/package.json`, source);
  };

  createSrc = function({name, dir}) {
    var assets, src;
    src = `${dir}/src`;
    fs.mkdirSync(src);
    createPages(src);
    createStyles(src);
    createScripts(src);
    createIcons(src);
    createManifest({name, src});
    createDeps(src);
    return assets = ['/', '/index.html', '/manifest.webmanifest', '/styles/main.css', '/scripts/deps.js', '/scripts/deps.js.LICENSE.txt', '/scripts/main.js'];
  };

  createPages = function(src) {
    var dir, source;
    dir = `${src}/pages`;
    fs.mkdirSync(dir);
    source = `doctype html
html
  head
    title ReactMaterial

    meta(charset="utf-8")
    meta(http-equiv="x-ua-compatible" content="ie=edge")
    meta(name="viewport" content="width=device-width, initial-scale=1.0")

    link(rel="icon" type="image/svg+xml" href="/icons/icon.svg")
    link(rel="alternate icon" href="/favicon.ico")
    link(rel="apple-touch-icon" href="/icons/180.png")

    link(rel="manifest" href="/manifest.webmanifest")

    link(rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap")
    link(rel="stylesheet" href="https://fonts.googleapis.com/icon?family=Material+Icons")
    link(rel="stylesheet" href="/styles/main.css")
  body
    #app`;
    return fs.writeFileSync(`${dir}/index.pug`, source);
  };

  createStyles = function(src) {
    var dir, source;
    dir = `${src}/styles`;
    fs.mkdirSync(dir);
    source = `body
  background-color: white`;
    return fs.writeFileSync(`${dir}/main.sass`, source);
  };

  createScripts = function(src) {
    var dir;
    dir = `${src}/scripts`;
    fs.mkdirSync(dir);
    return fs.writeFileSync(`${dir}/main.coffee`, `{ useState } = FROM 'react'
{ render } = FROM 'react-dom'

{ fragment } = FROM 'wrapjsx'

{ Button } = FROM '@material-ui/core'

App = fragment [
  Button color: 'primary', 'First button'
  Button color: 'primary', 'Second button'
]

render App, (document.getElementById 'app')`);
  };

  createDeps = function(src) {
    var spec;
    spec = `import:
  react:
  react-dom:
  wrapjsx:

react:
  '@material-ui/core':
    Button:`;
    return fs.writeFileSync(`${src}/deps.yml`, spec);
  };

}).call(this);
