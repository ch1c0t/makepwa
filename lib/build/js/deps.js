// Generated by CoffeeScript 2.5.1
(function() {
  var YAML, coffee, ensureDirExists, existsSync, path, readFileSync, runWebpack, writeFileSync;

  ({readFileSync, writeFileSync, existsSync} = require('fs'));

  path = require('path');

  YAML = require('yaml');

  coffee = require('coffeescript');

  ({ensureDirExists} = require('../../util'));

  ({runWebpack} = require('./common'));

  exports.buildDeps = function() {
    var entry, file, generateWebpackEntry, spec, targetDir;
    file = `${SRC}/deps.yml`;
    if (existsSync(file)) {
      spec = YAML.parse(readFileSync(file, 'utf-8'));
      generateWebpackEntry = function(spec) {
        var entry, imports, makeVariable, reacts, source;
        ensureDirExists('/tmp/makepwa');
        entry = '/tmp/makepwa/deps.js';
        makeVariable = function(string) {
          return string.replace('-', '').replace('@', '').replace('/', '');
        };
        imports = Object.keys(spec['import']).map(function(dep) {
          var variable;
          variable = makeVariable(dep);
          return `import ${variable} from '${CWD}/node_modules/${dep}'
_deps_['${dep}'] = ${variable}`;
        }).join('\n');
        reacts = Object.keys(spec['react']).map(function(dep) {
          var components, rawImport, toFROM, variable;
          variable = makeVariable(dep);
          components = Object.keys(spec['react'][dep]).map(function(string) {
            return {
              original: string,
              raw: `Raw_${string}_from_${variable}`
            };
          });
          rawImport = components.map(function({original, raw}) {
            return `${original} as ${raw}`;
          }).join(', ');
          toFROM = components.map(function({original, raw}) {
            return `_deps_['${dep}']['${original}'] = wrap ${raw}`;
          }).join('\n');
          return `_deps_['${dep}'] = {}
import { ${rawImport} } from '${CWD}/node_modules/${dep}'

${toFROM}`;
        }).join('\n');
        source = `_deps_ = {}
window.FROM = (string) ->
  _deps_[string]

${imports}

import { wrap } from '${CWD}/node_modules/wrapjsx'
${reacts}`;
        writeFileSync(entry, coffee.compile(source));
        return entry;
      };
      targetDir = `${DIST}/scripts`;
      ensureDirExists(targetDir);
      entry = generateWebpackEntry(spec);
      return runWebpack({
        entry,
        output: `${targetDir}/deps.js`
      });
    }
  };

}).call(this);
